[
    [
        "1",
        {
            "Body": "```cpp\n#include <iostream>\nint main()\n{\n    std::cout << \"Hello World\" << std::endl;\n    // https://main.gigasoft.com.pl\n    // Tomasz Kolk@ GigaSoft\n    return 1;\n}\n```\n# May full markdown Suport\n* I don't know all the markdown formatting.\"\n* but i like this\n*  :)",
            "ShortDes": "Hello World ",
            "Title": "C++"
        }
    ],
    [
        "2",
        {
            "Body": "```ts\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Typography, Box, TextField, Checkbox, Button, FormControl, Grid, Paper } from \"@mui/material\";\nimport { Task } from \"@/app/page\";\nimport SideBar from \"./TasksList\";\nimport TaskContext from \"./context\";\nimport CodeBlock from \"./Markdown\";\nexport default function Tasks() {\n  const [Title, setTitle] = useState<string>(\"\");\n  const [ShortDes, setShortDes] = useState<string>(\"\");\n  const [Body, setBody] = useState<string>(\"\");\n  const { task } = useContext(TaskContext);\n  const [markdown, setMarkdown] = useState<boolean>(false);\n\n\n  const newTask = async () => {\n    try {\n      let res = await fetch(\"http://127.0.0.1:1337\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          Title,\n          ShortDes,\n          Body,\n        }),\n      });\n\n      if (res.status === 200) {\n        window.location.reload()\n        setTitle(\"\");\n        setShortDes(\"\");\n        setBody(\"\");\n      } else {\n        console.error(\"Failed to create task\");\n        return;\n      }\n\n    } catch (error) {\n      console.error(\"Błąd:\", error);\n    }\n  };\n\n  useEffect(() => {\n    if (task) {\n      setTitle(task.details.Title);\n      setShortDes(task.details.ShortDes);\n      setBody(task.details.Body);\n    }\n  }, [task]);\n\n  return (\n    <main>\n      <Grid container spacing={2}>\n        <Grid item xs={12} md={4}>\n          <SideBar />\n        </Grid>\n        <Grid item xs={12} md={8}>\n          <Paper elevation={3} sx={{ p: 4, my: 2 }}>\n            <Box sx={{ textAlign: \"center\", mb: 4 }}>\n              <img\n                src=\"https://main.gigasoft.com.pl/logo.png\"\n                height=\"10%\"\n                width=\"10%\"\n                alt=\"Logo\"\n              />\n            </Box>\n            <FormControl fullWidth>\n              <TextField\n                autoComplete=\"off\"\n                autoCorrect=\"off\"\n                label=\"Title\"\n                value={Title}\n                onChange={(e) => setTitle(e.target.value)}\n                sx={{ marginBottom: 2 }}\n              />\n            </FormControl>\n            <FormControl fullWidth>\n              <TextField\n                autoComplete=\"off\"\n                autoCorrect=\"off\"\n                label=\"Short description\"\n                value={ShortDes}\n                onChange={(e) => setShortDes(e.target.value)}\n                sx={{ marginBottom: 2 }}\n              />\n            </FormControl>\n\n            <FormControl fullWidth sx={{ mb: 2}}>\n              <TextField\n                autoComplete=\"off\"\n                autoCorrect=\"off\"\n                label=\"Body\"\n                multiline\n                value={Body}\n                onChange={(e) => setBody(e.target.value)}\n                fullWidth\n              />\n            </FormControl>\n\n            <Box sx={{ textAlign: \"center\" }}>\n              <Button color=\"primary\" variant=\"contained\" sx={{ marginTop: 2 }}\n                onClick={newTask}>\n                Done!\n              </Button>\n            </Box>\n\n            <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n              <Checkbox color=\"info\" onChange={() => setMarkdown(!markdown)} />\n              <Typography variant=\"body1\">Preview Markdown!</Typography>\n            </Box>\n\n            {markdown ? (\n              <CodeBlock text={Body} />\n            ) : <></>}\n          </Paper>\n        </Grid>\n      </Grid>\n    </main>\n  );\n}\n\n```",
            "ShortDes": "This",
            "Title": "TypeScript"
        }
    ]
]
